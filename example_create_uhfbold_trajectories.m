% Script main_create_trajs
% Creates spiral & cartesian (FFE, EPI, multi-echo) trajectories from index file
%
% See also create_figure_trajectory_gradients
%
% Author: Lars Kasper
% Created: 2020-02-13

idSubject = 'UHFBOLD';
vendor = 'SIEMENS'; % 'SIEMENS', 'PHILIPS' for gradient dwell;
iEpiTrajArray = [1:2:6];
iSpiralTrajArray = [2:2:6];

if ispc
    pathProject = 'C:\Users\kasperla\UHN\Brain-TO - BookChapterUltraHighFieldNeuroMRI - BookChapterUltraHighFieldNeuroMRI';
    pathData = fullfile(pathProject, 'data');
    pathCodeTrajGen = 'C:\Users\kasperla\Documents\Code\Recon\utils\nominalTrajectory';
    pathRecon = 'C:\Users\kasperla\Documents\Code\Recon';
    % add paths for traj creation
    addpath(genpath(pathRecon));
    addpath(genpath(pathCodeTrajGen));
end

% where to write down the gradient files for easy access later on
pathExport = fullfile(pathData, 'exportGradientsSiemens');
[~,~] = mkdir(pathExport);

pathThis = fileparts(mfilename('fullpath'));

fileNameIndex = fullfile(pathThis, ...
    sprintf('index_gradient_files_%s.m', idSubject));

% Leave out dxSArray(t) & fovSArray for 2D trajectories OR set to zero.
[idArray, fovMArray, fovPArray, fovSArray, dxMArray, dxPArray, dxSArray,...
    rPArray, rSArray, nIlArray, maxGArray, maxSrArray, tAcqArray, trajDirArray, ...
    trajTypeArray, scheme3DArray, nPlanesPerShotArray] = ...
    read_index_gradient_files(fileNameIndex);


switch upper(vendor)
    case 'SIEMENS'
        dtGradient = 10e-6;
    case 'PHILIPS'
        dtGradient = 6.4e-6;
end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Create Spirals
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

for t = iSpiralTrajArray
    id = idArray(t);
    create_matched_filter_spiral(...
        'dtGradient', dtGradient, ...
        'FOV', [fovMArray(t) fovPArray(t) fovSArray(t)], ...
        'dx', [dxMArray(t) dxPArray(t) dxSArray(t)], ... % leave out dxSArray(t) for 2D trajectories
        'Rp', rPArray(t), ...
        'Rz', rSArray(t), ...
        'scheme3D', scheme3DArray{t}, ...
        'nPlanesPerShot', nPlanesPerShotArray(t), ...
        'nInterleaves', nIlArray(t), ...
        'verbose', 1, ...
        'idSubject', idSubject, ...
        'idGradientFolder', idArray(t), ...
        'trajectoryType', trajTypeArray{t}, ...
        'allowGaussBelowGmin', 0, ...
        'maxG', maxGArray(t), 'maxSlewRate', maxSrArray(t), ...
        'tAcqMax', tAcqArray(t), ...
        'directionSpiral', trajDirArray{t}, ...
        'doFullSampling', false, ...
        'doDetermineParametersFromIdGradientFolder', false, ...
        'pathCode', pathCodeTrajGen, ...
        'pathData', pathData, ...
        'interleafOrder', 'R1', ...
        'isBinary',0,...
        'nZeroFillEnd',0);
    % copy created gradient some to easily shareable location
    fileGradientIn = fullfile(pathData, idSubject, num2str(id), 'gradients.txt');
    fileGradientOut = fullfile(pathExport, sprintf('gradients%d.txt',id));
    copyfile(fileGradientIn, fileGradientOut);
    % save png figure as well
    fileGradientPic = fullfile(pathExport, sprintf('gradients%d.png', id));
    fhArray = get(0, 'Children');
    handleGradientPic = fhArray(2); % 2nd last figure is traj/grad/slew plot
    saveas(handleGradientPic, fileGradientPic);
end



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Create Cartesians (EPI/FFE, ME)
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

nExtraEchoes = trajDirArray;

% Why echo-shift as input parameter? Echo shift is not the right name, has
% a specific meaning for EPI, rather: delta_TE


for t = iEpiTrajArray

    % echo-spacing different for different scans...
    switch idArray(t)
        case {999}
        otherwise
            delta_TE = 0;
    end
    
    main_create_smooth_readgrad_FFE(...
        'dtGradient', dtGradient, ...
        'mp_switch', false, ...
        'subj', idSubject, ...
        'id', idArray(t), ...
        'traj_type', trajTypeArray{t}, ...
        'resolution', [dxMArray(t) dxPArray(t) dxSArray(t)], ...
        'Rp', rPArray(t), ...
        'Rz', rSArray(t), ...
        'FOV', [fovMArray(t) fovPArray(t) fovSArray(t)], ...
        'nPlanesPerShot', nPlanesPerShotArray(t), ...
        'maxG', maxGArray(t), 'maxSlewRate', maxSrArray(t), ...
        'interleaves', nIlArray(t), ...
        'vis_verbose', 1, ...
        'savedir', pathData, ...
        'n_zerofill_samples', 0, ...
        'n_extra_echoes_ffe', str2double(nExtraEchoes{t}), ...
        'delta_TE', repmat(delta_TE, 1, str2double(nExtraEchoes{t})));
end